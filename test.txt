from biblioteca import Biblioteca;
from system import System;
Prop Prestamos(Usuario,Libro){fecha_devolucion};
Prop Usuario(Usuario){libros_Prestados=0};
Prop Profesor(Usuario):Usuario{materia};
Prop Libro(Libro);
Prop Disponible(Libro);


Accion Test(U,L):
    Condiciones:
        rule Imprimir(U);
        System.print("hola {0}",U);
        P = Prestamos(U,_);
        C = Biblioteca.Count(*P);
        System.print("El numero de prestamos es: {0}",C);
        System.print("Estos son los prestamos: {0}",P);
        System.print("Estos son los prestamos agregados: {0}",*P);
    Consecuencias:
        System.print("Estos son los prestamos agregados: {0}",*P);
        Usuario("usuario"){libros_Prestados=0};
        Biblioteca.print("hola");
        P.fecha_devolucion += 1;
        DEL Usuario("usuario");
        rule Imprimir(U);

Accion Herencia(U):
    Condiciones:
        Profesor(U);
        Usuario(U);
    Consecuencias:
        System.print("{0} es un profesor, pero tambien es un Usuario",U);
        DEL Profesor(U);
Rule Imprimir(U):
    Condiciones:
        System.print("Imprimir:{0}",U);
    Consecuencias:
        System.print("fin Imprimir");

//Inicializacion

add Profesor(“nacho”){materia="Programacion"}; // Nacho es profesor, no tiene limite de libros
add Usuario(“juan”){libros_Prestados=9};
add Libro(“El señor de los anillos”);
//add Libro(“El señor de los anillos”);
add Disponible(“El señor de los anillos”); // Marca como disponible
add Libro(“El Quijote”);
//add Libro(“El Quijote”);
add Disponible(“El Quijote”); // Marca como disponible
add Libro(“1984”);
//add Libro(“1984”);
add Disponible(“1984”); // Marca como disponible
add Libro(“Dune”);
//add Libro(“Dune”);
add Disponible(“Dune”); // Marca como disponible

add Prestamos("nacho",“El señor de los anillos”){fecha_devolucion=0};
add Prestamos("juan",“1984”){fecha_devolucion=1};
add Prestamos("nacho",“Dune”){fecha_devolucion=1};







//Test
//Run Test(“nacho”, “El señor de los anillos”);
//Run Herencia("nacho");